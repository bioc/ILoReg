% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CoreMethods.R
\name{GeneScatterPlot}
\alias{GeneScatterPlot}
\alias{GeneScatterPlot.SingleCellExperiment}
\alias{GeneScatterPlot,SingleCellExperiment-method}
\title{Visualize gene expression over nonlinear dimensionality reduction}
\usage{
GeneScatterPlot.SingleCellExperiment(
  object,
  genes,
  return.plot,
  dim.reduction.type,
  point.size,
  title,
  plot.expressing.cells.last
)

\S4method{GeneScatterPlot}{SingleCellExperiment}(
  object,
  genes = "",
  return.plot = FALSE,
  dim.reduction.type = "tsne",
  point.size = 0.7,
  title = "",
  plot.expressing.cells.last = FALSE
)
}
\arguments{
\item{object}{of \code{SingleCellExperiment} class}

\item{genes}{a character vector of the genes to be visualized}

\item{return.plot}{whether to return the ggplot2 object or just draw it (default \code{FALSE})}

\item{dim.reduction.type}{"tsne" or "umap" (default "tsne")}

\item{point.size}{point size (default 0.7)}

\item{title}{text to write above the plot}

\item{plot.expressing.cells.last}{whether to plot the expressing genes last to make the points more visible}
}
\value{
ggplot2 object if return.plot=TRUE
}
\description{
GeneScatterPlot enables visualizing gene expression of a gene over
nonlinear dimensionality reduction with t-SNE or UMAP.
}
\examples{
## Load 10X Chromium data and LogNormalized them.
raw_data <- Seurat::Read10x("~/pbmc3k/filtered_gene_bc_matrices/hg19/")
data <- Seurat::LogNormalize(raw_data)
## Create a SingleCellExperiment object
library(SingleCellExperiment)
sce <- SingleCellExperiment(assays=list(logcounts=data))
## Cleans the data in `logcounts` slot: removes duplicate
## and non-expressing genes.
library(ILoReg)
sce <- PreapareILoReg(sce)
## Run L ICP runs in parallel
sce <- RunParallelICP(sce)
## Visualize QC
VisualizeQC(sce)
## Run PCA
sce <- RunPCA(sce,p = 50,scale = FALSE)
## Cluster hierarchically using the Ward's agglomeration
sce <- HierarchicalClustering(sce)
## Estimate optimal K using silhouette method
sce <- CalculateSilhouetteInformation(sce, K.start = 2, K.end = 50)
## Draw silhouette curve
GeneScatterPlot(sce)

}
\keyword{gene}
\keyword{plot}
\keyword{scatter}
\keyword{visualization}
