% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CoreMethods.R
\name{ClusteringScatterPlot}
\alias{ClusteringScatterPlot}
\alias{ClusteringScatterPlot.SingleCellExperiment}
\alias{ClusteringScatterPlot,SingleCellExperiment-method}
\title{Visualize the clustering over nonliner dimensionality reduction}
\usage{
ClusteringScatterPlot.SingleCellExperiment(
  object,
  clustering.type,
  return.plot,
  dim.reduction.type,
  point.size,
  title,
  show.legend
)

\S4method{ClusteringScatterPlot}{SingleCellExperiment}(
  object,
  clustering.type = "manual",
  return.plot = FALSE,
  dim.reduction.type = "",
  point.size = 0.7,
  title = "",
  show.legend = TRUE
)
}
\arguments{
\item{object}{of \code{SingleCellExperiment} class}

\item{clustering.type}{"manual" or "optimal". "manual" refers to the
clustering formed using the "SelectKClusters" function and "optimal" to
the clustering formed using the "CalculateSilhouetteInformation" function.
Default is "manual".}

\item{return.plot}{a logical denoting whether to return the ggplot2 object.
Default is \code{FALSE}.}

\item{dim.reduction.type}{"tsne" or "umap". Default is "tsne".}

\item{point.size}{point size. Default is Default is \code{0.7}.}

\item{title}{text to write above the plot}

\item{show.legend}{whether to show the legend on the right side of the plot.
Default is \code{TRUE}.}
}
\value{
ggplot2 object if return.plot=TRUE
}
\description{
ClusteringScatterPlot function enables visualizing the clustering over
nonliner dimensionality reduction (t-SNE or UMAP).
}
\examples{
## Load 10X Chromium data and LogNormalized them.
raw_data <- Seurat::Read10x("~/pbmc3k/filtered_gene_bc_matrices/hg19/")
data <- Seurat::LogNormalize(raw_data)
## Create a SingleCellExperiment object
library(SingleCellExperiment)
sce <- SingleCellExperiment(assays=list(logcounts=data))
## Cleans the data in `logcounts` slot: removes duplicate
## and non-expressing genes.
library(ILoReg)
sce <- PreapareILoReg(sce)
## Run L ICP runs in parallel
sce <- RunParallelICP(sce)
## Visualize QC
VisualizeQC(sce)
## Run PCA
sce <- RunPCA(sce,p = 50,scale = FALSE)
## Cluster hierarchically using the Ward's agglomeration
sce <- HierarchicalClustering(sce)
## Estimate optimal K using silhouette method
sce <- CalculateSilhouetteInformation(sce, K.start = 2, K.end = 50)
## Draw silhouette curve
ClusteringScatterPlot(sce)

}
\keyword{clustering}
\keyword{dimensionality}
\keyword{nonlinear}
\keyword{plot}
\keyword{reduction}
\keyword{scatter}
