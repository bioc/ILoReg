% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CoreMethods.R
\name{MergeClusters}
\alias{MergeClusters}
\alias{MergeClusters.SingleCellExperiment}
\alias{MergeClusters,SingleCellExperiment-method}
\title{Merge clusters}
\usage{
MergeClusters.SingleCellExperiment(object, clusters.to.merge, new.name)

\S4method{MergeClusters}{SingleCellExperiment}(object, clusters.to.merge = "", new.name = "")
}
\arguments{
\item{object}{of \code{SingleCellExperiment} class}

\item{clusters.to.merge}{a character or numeric vector for the names of
the clusters to merge}

\item{new.name}{a character for the new name of the merged cluster.
If left empty, the new cluster name is formed by separating
the cluster names by "_".}
}
\value{
object of \code{SingleCellExperiment} class
}
\description{
MergeClusters function enables merging clusters and naming the newly
formed cluster.
}
\examples{
## Load 10X Chromium data and LogNormalized them.
raw_data <- Seurat::Read10x("~/pbmc3k/filtered_gene_bc_matrices/hg19/")
data <- Seurat::LogNormalize(raw_data)
## Create a SingleCellExperiment object
library(SingleCellExperiment)
sce <- SingleCellExperiment(assays=list(logcounts=data))
## Cleans the data in `logcounts` slot: removes duplicate
## and non-expressing genes.
library(ILoReg)
sce <- PreapareILoReg(sce)
## Run L ICP runs in parallel
sce <- RunParallelICP(sce)
## Visualize QC
VisualizeQC(sce)
## Run PCA
sce <- RunPCA(sce,p = 50,scale = FALSE)
## Cluster hierarchically using the Ward's agglomeration
sce <- HierarchicalClustering(sce)
## Estimate optimal K using silhouette method
sce <- CalculateSilhouetteInformation(sce, K.start = 2, K.end = 50)
## Draw silhouette curve
MergeClusters(sce)

}
\keyword{clusters}
\keyword{merge}
